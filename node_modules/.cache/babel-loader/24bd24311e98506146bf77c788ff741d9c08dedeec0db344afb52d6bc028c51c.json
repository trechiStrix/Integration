{"ast":null,"code":"const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,4}$/i;\nconst regexPassword = /^(?=.*?[a-z])(?=.*?[0-9]).{6,10}$/;\nexport function validate(objUser) {\n  const errors = {};\n  if (!regexEmail.test(objUser.username)) {\n    errors.username = \"El usuario debe ser un email.\";\n  } else if (!objUser.username) {\n    errors.username = \"El usuario no puede quedar vacío.\";\n  } else if (objUser.username.length > 35) {\n    errors.username = \"El usuario debe tener \";\n  }\n  return errors;\n}","map":{"version":3,"names":["regexEmail","regexPassword","validate","objUser","errors","test","username","length"],"sources":["C:/Users/trechi/Desktop/rick and morty integration/rick_and_morty/src/components/Form/validation.js"],"sourcesContent":["const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,4}$/i;\r\nconst regexPassword = /^(?=.*?[a-z])(?=.*?[0-9]).{6,10}$/;\r\n\r\nexport function validate(objUser){\r\n    const errors = {};\r\n\r\n    if(!regexEmail.test(objUser.username)){\r\n        errors.username = \"El usuario debe ser un email.\";\r\n    } else if(!objUser.username) {\r\n        errors.username = \"El usuario no puede quedar vacío.\";\r\n    } else if(objUser.username.length > 35){\r\n        errors.username = \"El usuario debe tener \";\r\n    }\r\n    return errors;\r\n}"],"mappings":"AAAA,MAAMA,UAAU,GAAG,4CAA4C;AAC/D,MAAMC,aAAa,GAAG,mCAAmC;AAEzD,OAAO,SAASC,QAAQ,CAACC,OAAO,EAAC;EAC7B,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,IAAG,CAACJ,UAAU,CAACK,IAAI,CAACF,OAAO,CAACG,QAAQ,CAAC,EAAC;IAClCF,MAAM,CAACE,QAAQ,GAAG,+BAA+B;EACrD,CAAC,MAAM,IAAG,CAACH,OAAO,CAACG,QAAQ,EAAE;IACzBF,MAAM,CAACE,QAAQ,GAAG,mCAAmC;EACzD,CAAC,MAAM,IAAGH,OAAO,CAACG,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAC;IACnCH,MAAM,CAACE,QAAQ,GAAG,wBAAwB;EAC9C;EACA,OAAOF,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}